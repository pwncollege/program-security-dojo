name: Program Security
description: |
    In the realm of cybersecurity, your journey mirrors that of a martial artist mastering the art of defense and attack. The “Program Security” module is where you will train in the ancient techniques of shellcoding and memory corruption. Like a skilled martial artist wielding precise strikes, you will learn to craft shellcode that slips past defenses with the agility of a shadow. You will also study memory corruption vulnerabilities, discovering how to exploit pinpoint weaknesses with the precision of a pressure point strike.

resources:
  - type: header
    content: Shellcoding Resources
  - name: "Shellcode Injection: Introduction"
    type: lecture
    video: 715v_-YnpT8
    playlist: PL-ymxv0nOtqomtHqMqqgpuvWdVSs9NCBK
    slides: 1kkfh-dhgxfIZPB1ziyW2JQiC1MbQWn8c7e24kOoDxJ4
  - name: "Shellcode Injection: Common Challenges"
    type: lecture
    video: i1jXV8W-CYQ
    playlist: PL-ymxv0nOtqomtHqMqqgpuvWdVSs9NCBK
    slides: 1BHsKKkodMLXcHyqJCU0wDgexQ8jHEEiAU9Uq_Z9mibY
  - name: "Shellcode Injection: Data Execution Prevention"
    type: lecture
    video: GH4NBLtPmyo
    playlist: PL-ymxv0nOtqomtHqMqqgpuvWdVSs9NCBK
    slides: 1tH6jbnpX2_T5ZeDzZBfpLZ-ngpIZp3g25PPQaTr52JU
  - name: "Shellcoding Tips and Tricks"
    type: lecture
    video: 4R5xYA2WEJI
    playlist: PL-ymxv0nOtqqhKlspuPMwJn5PO3bUAjD7
  - name: Further Reading
    type: markdown
    content: |
      Lots of external resources are referred to in the module videos.
      Additionally, the following reading material is useful:

      - [Wikipedia](https://en.wikipedia.org/wiki/Shellcode)
      - [x86_64 assembly listing](http://ref.x86asm.net/coder64.html)
      - [Syscall Table](https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/)
      - [Another syscall table, with multiple architectures!](https://syscall.sh/)

  - type: header
    content: Shellcoding challenges
  - id: ello-ackers
    name: ello ackers!
    type: challenge
    description: Write and execute shellcode to read the flag, but your inputted data is filtered before execution.
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-4
  - id: syscall-smuggler
    name: Syscall Smuggler
    type: challenge
    description: Write and execute shellcode to read the flag, but the inputted data cannot contain any form of system call
      bytes (syscall, sysenter, int), can you defeat this?
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-5
  - id: syscall-shenanigans
    name: Syscall Shenanigans
    type: challenge
    description: Write and execute shellcode to read the flag, but the inputted data cannot contain any form of system call
      bytes (syscall, sysenter, int), this challenge adds an extra layer of difficulty!
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-6
  - id: byte-budget
    name: Byte Budget
    type: challenge
    description: Write and execute shellcode to read the flag, but you only get 18 bytes.
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-8
  - id: clobbercode
    name: ClobberCode
    type: challenge
    description: Write and execute shellcode to read the flag, but your input has data inserted into it before being executed.
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-9
  - id: diverse-delivery
    name: Diverse Delivery
    type: challenge
    description: Write and execute shellcode to read the flag, but every byte in your input must be unique.
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-12
  - id: pocket-payload
    name: Pocket Payload
    type: challenge
    description: Write and execute shellcode to read the flag, but this time you only get 12 bytes!
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-13
  - id: micro-menace
    name: Micro Menace
    type: challenge
    description: "Write and execute shellcode to read the flag, but this time you only get 6 bytes :)"
    transfer:
      dojo: program-security
      module: shellcode-injection
      challenge: level-14

  - type: header
    content: Memory Corruption Resources
  - name: "Memory Errors: Introduction"
    type: challenge
    type: lecture
    video: z_XOhfsVKnU
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 10cq3gCAvYjh_fzqiLLc1hCyqchux7x8pcskk6xGdVL8
  - name: "Memory Errors: High-level Problems"
    type: challenge
    type: lecture
    video: 4PJvcZZIyT8
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 1umxk_Gq_yGeCcBEz9toQ6Wil8G1bmK3NdrkFITadPhs
  - name: "Memory Errors: Smashing the Stack"
    type: challenge
    type: lecture
    video: PVx1hUlMxtQ
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 1_Zs7s7O_VqXd8prv0GIjUT993qL3KgjVby8qC0Ixs_w
  - name: "Memory Errors: Causes of Corruption 1"
    type: challenge
    type: lecture
    video: u80_j06HkpM
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 1N5ybP1-SyU-PbQKMBRfFdNntbLPCOkROOybf_ZYBBBI
  - name: "Memory Errors: Causes of Corruption 2"
    type: challenge
    type: lecture
    video: fVa2xahshik
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 1N5ybP1-SyU-PbQKMBRfFdNntbLPCOkROOybf_ZYBBBI
  - name: "Memory Errors: Stack Canaries"
    type: challenge
    type: lecture
    video: 55zWlEFflgE
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 19bO811-RSjez-E8zGMJYvUwFi5jW-vRTv19z1g8ZT3I
  - name: "Memory Errors: ASLR"
    type: challenge
    type: lecture
    video: SBqERAbDdAk
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 1EOUvQsDsk5eg1Ysq9Us-CnLgCOP5IRIR8P6FThBVeGo
  - name: "Memory Errors: Causes of Disclosure"
    type: challenge
    type: lecture
    video: S9IIGVK6K0I
    playlist: PL-ymxv0nOtqpmHdeii3NsBurJSvuMTKLL
    slides: 1Qonbh98U_s3aN9Ut0dgdHFnm_ymb9e2yUqT6bkY4FbU
  - name: "Memory Errors: Tips and Tricks"
    type: challenge
    type: lecture
    video: 7TW0fvz_cQk
    playlist: PL-ymxv0nOtqqhKlspuPMwJn5PO3bUAjD7
  - name: Further Reading
    type: markdown
    content: |
      * OpenSecurityTraining2 has courses covering security vulnerabilities: [Vulnerabilities 1001](https://ost2.fyi/Vulns1001) and [Vulnerabilities 1002](https://ost2.fyi/Vulns1002).

  - type: header
    content: Memory Corruption Challenges
  - id: login-leakage-easy
    name: Login Leakage (Easy)
    type: challenge
    description: Leverage memory corruption to satisfy a simple constraint
  - id: login-leakage-hard
    name: Login Leakage (Hard)
    type: challenge
    description: Leverage memory corruption to satisfy a simple constraint

  - id: bounds-breaker-easy
    name: Bounds Breaker (Easy)
    type: challenge
    description: Overflow a buffer and smash the stack to obtain the flag, but this time bypass a check designed to prevent you from doing so!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-4-0
  - id: bounds-breaker-hard
    name: Bounds Breaker (Hard)
    type: challenge
    description: Overflow a buffer and smash the stack to obtain the flag, but this time bypass a check designed to prevent you from doing so!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-4-1
  - id: casting-catastrophy-easy
    name: Casting Catastrophy (Easy)
    type: challenge
    description: Overflow a buffer and smash the stack to obtain the flag, but this time bypass another check designed to prevent you from doing so!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-5-0
  - id: casting-catastrophy-hard
    name: Casting Catastrophy (Hard)
    type: challenge
    description: Overflow a buffer and smash the stack to obtain the flag, but this time bypass another check designed to prevent you from doing so!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-5-1
  - id: pointer-problems-easy
    name: Pointer Problems (Easy)
    type: challenge
    description: Leverage memory corruption to leak the flag.
  - id: pointer-problems-hard
    name: Pointer Problems (Hard)
    type: challenge
    description: Leverage memory corruption to leak the flag.

  - id: loop-lunacy-easy
    name: Loop Lunacy (Easy)
    type: challenge
    description: Overflow a buffer and smash the stack to obtain the flag, but this time in a PIE binary with a stack canary. Be warned, this requires careful and clever payload construction!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-9-0
  - id: loop-lunacy-hard
    name: Loop Lunacy (Hard)
    type: challenge
    description: Overflow a buffer and smash the stack to obtain the flag, but this time in a PIE binary with a stack canary. Be warned, this requires careful and clever payload construction!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-9-1
  - id: nosy-neighbor-easy
    name: Nosy Neighbor (Easy)
    type: challenge
    description: Overflow a buffer and leak the flag. Be warned, this requires careful and clever payload construction!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-10-0
  - id: nosy-neighbor-hard
    name: Nosy Neighbor (Hard)
    type: challenge
    description: Overflow a buffer and leak the flag. Be warned, this requires careful and clever payload construction!
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-10-1
  - id: recursive-ruin-easy
    name: Recursive Ruin (Easy)
    type: challenge
    description: Defeat a stack canary in a PIE binary by utilizing a bug left in the binary.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-12-0
  - id: recursive-ruin-hard
    name: Recursive Ruin (Hard)
    type: challenge
    description: Defeat a stack canary in a PIE binary by utilizing a bug left in the binary.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-12-1
  - id: lingering-leftover-easy
    name: Lingering Leftover (Easy)
    type: challenge
    description: Leak data left behind unintentionally by utilizing clever payload construction.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-13-0
  - id: lingering-leftover-hard
    name: Lingering Leftover (Hard)
    type: challenge
    description: Leak data left behind unintentionally by utilizing clever payload construction.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-13-1
  - id: latent-leak-easy
    name: Latent Leak (Easy)
    type: challenge
    description: Leak data left behind unintentionally to defeat a stack canary in a PIE binary.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-14-0
  - id: latent-leak-hard
    name: Latent Leak (Hard)
    type: challenge
    description: Leak data left behind unintentionally to defeat a stack canary in a PIE binary.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-14-1
  - id: fork-foolery-easy
    name: Fork Foolery (Easy)
    type: challenge
    description: Defeat a stack canary in a PIE binary by utilizing a network-style fork server in the target binary.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-15-0
  - id: fork-foolery-hard
    name: Fork Foolery (Hard)
    type: challenge
    description: Defeat a stack canary in a PIE binary by utilizing a network-style fork server in the target binary.
    transfer:
      dojo: program-security
      module: memory-errors
      challenge: level-15-1

  - id: anomalous-array-easy
    name: Anamalous Array (Easy)
    type: challenge
    description: Leverage an Array to obtain the flag.
  - id: anomalous-array-hard
    name: Anamalous Array (Hard)
    type: challenge
    description: Leverage an Array to obtain the flag.
  - id: now-you-got-it-easy
    name: Now you got it (Easy)
    type: challenge
    description: Leverage an Array to obtain the flag.
  - id: now-you-got-it-hard
    name: Now you got it (Hard)
    type: challenge
    description: Leverage an Array to obtain the flag.

  - type: markdown
    name: Exploitation
    content: SoonTM
