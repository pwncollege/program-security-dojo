name: Return Oriented Programming
description: |
  Picture yourself as a digital maestro, orchestrating a symphony of code in a vast digital realm.
  However, there’s a twist: you don’t get to pen down your own notes.
  Instead, you're given a legacy of existing code snippets, scattered across the system.
  This is the essence of Return Oriented Programming (ROP) exploits! Using nothing but the remnants of the system’s own code, you craft a cunning composition that dances to your own tune, bypassing modern security measures with elegance and stealth.

  Each snippet is like a musical phrase, ending in a "return" instruction, whisking you off to the next snippet in your clandestine concerto.
  With each leap and bound, you weave a nefarious narrative, circumventing security checks and executing unauthorized actions, all while under the unsuspecting nose of the system’s defenses.

  ROP is not just a hack; it’s a masterpiece of unauthorized orchestration, a ballet of borrowed instructions, choreographed with precision to achieve your clandestine objectives.
  With ROP, you step into a realm where every byte is a beat, and every return is a rhythm, embarking on an exhilarating journey of exploitation and discovery.

resources:
  - type: header
    content: Return Oriented Programming Resources
  - name: "Return Oriented Programming: Introduction"
    type: lecture
    video: El8-vMDJ1zY
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 1OM8gd6oqiFl2tU6G-ydiCfkNhgUTNKDFoYz-g2IIwHg
  - name: "Return Oriented Programming: Binary Lego"
    type: lecture
    video: L0gzNhbnOUA
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 1axSooHyjCJulwGNrhYM2GyjWJBSxTAg9Ia9Jpw9gW6s
  - name: "Return Oriented Programming: Techniques"
    type: lecture
    video: OVkObKS0gOo
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 1x7PASDmpjPDXvkD9HmZ2wC2JJNT8lHCkZTYcDQ9CjAk
  - name: "Return Oriented Programming: Complications"
    type: lecture
    video: Iq2IFCKDpKc
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 12_ymnKrYPUD1rJz6tauS2oNw45eWivhYMWfUzsnOeHM

  - type: header
    content: Calling Functions
  - id: level-1-0
    name: Loose Link (Easy)
    description: Overwrite a return address to trigger a win function!
    type: challenge
  - id: level-1-1
    name: Loose Link (Hard)
    description: Overwrite a return address to trigger a win function!
    type: challenge
  - id: level-2-0
    name: Call Chain (Easy)
    description: Use ROP to trigger a two-stage win function!
    type: challenge
  - id: level-2-1
    name: Call Chain (Hard)
    description: Use ROP to trigger a two-stage win function!
    type: challenge
  - id: level-3-0
    name: Chain of Command (Easy)
    description: Use ROP to trigger a multi-stage win function!
    type: challenge
  - id: level-3-1
    name: Chain of Command (Hard)
    description: Use ROP to trigger a multi-stage win function!
    type: challenge

  - type: header
    content: Chaining Gadgets
  - id: level-4-0
    name: Stop, Pop, and ROP (Easy)
    description: Leverage a stack leak while crafting a ROP chain to obtain the flag!
    type: challenge
  - id: level-4-1
    name: Stop, Pop, and ROP (Hard)
    description: Leverage a stack leak while crafting a ROP chain to obtain the flag!
    type: challenge
  - id: level-5-0
    name: Stop, Pop and ROP II (Easy)
    description: Craft a ROP chain to obtain the flag, now with no stack leak!
    type: challenge
  - id: level-5-1
    name: Stop, Pop, and ROP II (Hard)
    description: Craft a ROP chain to obtain the flag, now with no stack leak!
    type: challenge
  - id: level-6-0
    name: Indirect Invocation (Easy)
    description: Craft a ROP chain to obtain the flag, now with no syscall gadget!
    type: challenge
  - id: level-6-1
    name: Indirect Invocation (Hard)
    description: Craft a ROP chain to obtain the flag, now with no syscall gadget!
    type: challenge

  - type: header
    content: Leveraging Libc
  - id: level-7-0
    name: Leaky Libc (Easy)
    description: Utilize a libc leak to ROP with libc!
    type: challenge
  - id: level-7-1
    name: Leaky Libc (Hard)
    description: Utilize a libc leak to ROP with libc!
    type: challenge
  - id: level-8-0
    name: Putsception (Easy)
    description: ROP with libc, no free leak this time!
    type: challenge
  - id: level-8-1
    name: Putsception (Hard)
    description: ROP with libc, no free leak this time!
    type: challenge

  - type: header
    content: Stack Pivoting Class Streams
  - type: markdown
    name: Stack Pivoting Class Streams
    content: |
      Follow along with a live class with the same demo as the instructor!
    expandable: false
  - name: "Take it or Leave it - Livestream"
    type: lecture
    video: FfBLEJYtBxQ
    playlist: PL-ymxv0nOtqqly6KvcTQYgkNYBjBOYMJR
  - id: demo-take-it-or-leave-it
    name: Take it or Leave it Demo
    type: challenge
    required: false

  - type: header
    content: Stack Pivoting Challenges
  - id: level-9-0
    name: Pivotal Prelude (Easy)
    description: Perform a stack pivot to gain control flow!
    type: challenge
  - id: level-9-1
    name: Pivotal Prelude (Hard)
    description: Perform a stack pivot to gain control flow!
    type: challenge
  - id: level-10-0
    name: Pivotal Pointer (Easy)
    description: Perform a partial overwrite to call the win function.
    type: challenge
  - id: level-10-1
    name: Pivotal Pointer (Hard)
    description: Perform a partial overwrite to call the win function.
    type: challenge
  - id: level-11-0
    name: Pivotal Payload (Easy)
    description: Apply stack pivoting to call the win function.
    type: challenge
  - id: level-11-1
    name: Pivotal Payload (Hard)
    description: Apply stack pivoting to call the win function.
    type: challenge
  - id: level-12-0
    name: Pivotal Pursuit (Easy)
    description: Creatively apply stack pivoting to call the win function.
    type: challenge
  - id: level-12-1
    name: Pivotal Pursuit (Hard)
    description: Creatively apply stack pivoting to call the win function.
    type: challenge

  - type: header
    content: Exploitation
  - id: level-13-0
    name: Guarded Gadgets (Easy)
    description: Perform ROP when the function has a canary!
    type: challenge
  - id: level-13-1
    name: Guarded Gadgets (Hard)
    description: Perform ROP when the function has a canary!
    type: challenge
  - id: level-14-0
    name: ROP Roulette (Easy)
    description: Perform ROP against a network forkserver!
    type: challenge
  - id: level-14-1
    name: ROP Roulette (Hard)
    description: Perform ROP against a network forkserver!
    type: challenge
  - id: level-15-0
    name: Libc Lottery (Easy)
    description: Perform ROP when the stack frame returns to libc!
    type: challenge
  - id: level-15-1
    name: Libc Lottery (Hard)
    description: Perform ROP when the stack frame returns to libc!
    type: challenge
